@mixin recalc-bgsize($name, $new-width) {
  $sprite-width: {{spriteWidth}};
  $sprite-width-maps: (
    {{#shapes}}
    {{#selector.shape}}{{name}}{{/selector.shape}}: {{#dimensions.extra}}{{width.outer}}{{/dimensions.extra}}{{^last}},{{/last}}
    {{/shapes}}
  );
  background-size: #{($new-width / map-get($sprite-width-maps, $name)) * $sprite-width}px;
}


{{#hasMixin}}@mixin {{mixinName}} {
  text-indent: 110%;
  white-space: nowrap;
  overflow: hidden;
  text-align: left;
  background-image: url("/static/images/{{{pngPath}}}");
  // scss-lint:disable DuplicateProperty
  background-image: none, url("/static/images/{{{sprite}}}");
  // scss-lint:enable DuplicateProperty
  background-repeat: no-repeat;
}

{{#hasCommon}}.{{commonName}} {
  @include {{mixinName}};
}

{{/hasCommon}}{{/hasMixin}}{{^hasMixin}}{{#hasCommon}}.{{/hasCommon}}{{^hasCommon}}%{{/hasCommon}}{{commonName}} {
  text-indent: 110%;
  white-space: nowrap;
  overflow: hidden;
  text-align: left;
  background-image: url("/static/images/{{{pngPath}}}");
  // scss-lint:disable DuplicateProperty
  background-image: none, url("/static/images/{{{sprite}}}");
  // scss-lint:enable DuplicateProperty
  background-repeat: no-repeat;
}

{{/hasMixin}}{{#shapes}}{{#selector.shape}}{{expression}}{{^last}},
{{/last}}{{/selector.shape}} {
  {{^hasCommon}}{{#hasMixin}}@include {{mixinName}};{{/hasMixin}}{{^hasMixin}}@extend %{{commonName}};{{/hasMixin}}
  {{/hasCommon}}background-position: {{position.relative.xy}};{{#dimensions.inline}}
  width: {{width.outer}}px;
  height: {{height.outer}}px;{{/dimensions.inline}}
}{{#dimensions.extra}}

{{#selector.dimensions}}{{expression}}{{^last}},
{{/last}}{{/selector.dimensions}} {
  width: {{width.outer}}px;
  height: {{height.outer}}px;
}{{/dimensions.extra}}

{{/shapes}}
